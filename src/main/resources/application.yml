server:
  servlet:
    session:
      timeout: 1800 # 30 минут
#  http2:
#    enabled: true
#  ssl:
#    key-store:
#    key-store-password:
#    key-alias:


spring:

#  profiles:
#    active: "@spring.profiles.active@"

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres-db
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GHUB_CLIENT_ID}
            client-secret: ${GHUB_CLIENT_SECRET}
  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD}

logging:
  level:
    org.springframework.security: trace



---

spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://e-shop-postgres:5432/postgres-db
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GHUB_CLIENT_ID}
            client-secret: ${GHUB_CLIENT_SECRET}
  data:
    redis:
      host: e-shop-redis
      port: 6379
      password: ${REDIS_PASSWORD}

---

spring:

  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:postgresql://87.242.85.103:5433/postgres-db-test
    username: ${TEST_DB_USERNAME}
    password: ${TEST_DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GHUB_CLIENT_ID}
            client-secret: ${GHUB_CLIENT_SECRET}
  data:
    redis:
      host: e-shop-redis
      port: 6379
      password: ${REDIS_PASSWORD}

---

spring:

  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:postgresql://e-shop-postgres:5432/postgres-db
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GHUB_CLIENT_ID}
            client-secret: ${GHUB_CLIENT_SECRET}
  data:
    redis:
      host: e-shop-redis
      port: 6379
      password: ${REDIS_PASSWORD}

